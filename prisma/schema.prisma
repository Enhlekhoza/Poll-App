generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String         @id @default(cuid())
  email     String         @unique
  password  String
  name      String?
  image     String?
  role      String         @default("user")
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  comments  Comment[]
  polls     Poll[]
  votes     Vote[]
  templates PollTemplate[]
}

model Poll {
  id          String    @id @default(cuid())
  title       String
  description String?
  authorId    String
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[]
  options     Option[]
  author      User      @relation(fields: [authorId], references: [id])
  votes       Vote[]
}

model Option {
  id        String   @id @default(cuid())
  text      String
  pollId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  poll      Poll     @relation(fields: [pollId], references: [id])
  votes     Vote[]
}

model Vote {
  id          String   @id @default(cuid())
  pollId      String
  optionId    String
  userId      String?
  anonymousId String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  option      Option   @relation(fields: [optionId], references: [id])
  poll        Poll     @relation(fields: [pollId], references: [id])

  @@unique([pollId, userId])
  @@unique([pollId, anonymousId])
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  pollId    String
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  poll      Poll     @relation(fields: [pollId], references: [id])
}

model PollTemplate {
  id          String   @id @default(cuid())
  name        String
  description String?
  authorId    String
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  options     String   // Stored as JSON string of option texts
  author      User     @relation(fields: [authorId], references: [id])
}
