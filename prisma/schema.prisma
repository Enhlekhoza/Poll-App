generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  role      String    @default("user")
  polls     Poll[]
  votes     Vote[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Poll {
  id          String    @id @default(cuid())
  title       String
  description String?
  options     Option[]
  votes       Vote[]
  comments    Comment[]
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Option {
  id        String   @id @default(cuid())
  text      String
  poll      Poll     @relation(fields: [pollId], references: [id])
  pollId    String
  votes     Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id        String   @id @default(cuid())
  poll      Poll     @relation(fields: [pollId], references: [id])
  pollId    String
  option    Option   @relation(fields: [optionId], references: [id])
  optionId  String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  anonymousId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([pollId, userId])
  @@unique([pollId, anonymousId])
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  poll      Poll     @relation(fields: [pollId], references: [id])
  pollId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
